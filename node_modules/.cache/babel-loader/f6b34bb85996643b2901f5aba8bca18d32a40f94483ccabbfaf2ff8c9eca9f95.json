{"ast":null,"code":"var _jsxFileName = \"/Users/Administrator/Desktop/STUDY/SpringBoot+React/chatapp/src/component/ChatRoom.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { over } from 'stompjs';\nimport SockJS from 'sockjs-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar stompClient = null;\nconst ChatRoom = () => {\n  _s();\n  const [userData, setUserData] = useState({\n    username: \"\",\n    receivername: \"\",\n    connected: false,\n    message: \"\"\n  });\n  const handleUserName = event => {\n    setUserData({\n      ...userData,\n      username: event.target.value\n    });\n  };\n  const registerUser = () => {\n    let Sock = new SockJS('http://localhost:8080/ws');\n    stompClient.over(Sock);\n    stompClient.connect({}, onConnected, onError);\n  };\n  const onConnected = () => {\n    setUserData({\n      ...userData,\n      \"connected\": true\n    });\n    stompClient.subscribe('/chatroom/public', onPublicMessageReceived);\n    stompClient.subscribe('/user/' + userData.username + '/private', onPrivateMessageReceived);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: userData.connected ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"user-name\",\n        placeholder: \"Enter the user name\",\n        value: userData.username,\n        onChange: handleUserName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: registerUser,\n        children: \"Connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatRoom, \"8XHwtsqpSlaM51CG1rnZIoZ1FoY=\");\n_c = ChatRoom;\nexport default ChatRoom;\nvar _c;\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"names":["React","useState","over","SockJS","jsxDEV","_jsxDEV","stompClient","ChatRoom","_s","userData","setUserData","username","receivername","connected","message","handleUserName","event","target","value","registerUser","Sock","connect","onConnected","onError","subscribe","onPublicMessageReceived","onPrivateMessageReceived","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","placeholder","onChange","type","onClick","_c","$RefreshReg$"],"sources":["/Users/Administrator/Desktop/STUDY/SpringBoot+React/chatapp/src/component/ChatRoom.js"],"sourcesContent":["import React, {useState} from 'react'\nimport { over } from 'stompjs'\nimport SockJS from 'sockjs-client'\n\nvar stompClient=null;\nconst ChatRoom = () => {\n  const [userData, setUserData] = useState({\n        username: \"\",\n        receivername: \"\",\n        connected: false,\n        message: \"\"\n    })\n  \n  const handleUserName = (event) => {\n        setUserData({...userData, username : event.target.value})\n    }\n    \n  const registerUser = () => {\n    let Sock = new SockJS('http://localhost:8080/ws');\n    stompClient.over(Sock);\n    stompClient.connect({}, onConnected, onError);\n  } \n  \n  const onConnected = () => {\n    setUserData({...userData,\"connected\": true});\n    stompClient.subscribe('/chatroom/public', onPublicMessageReceived);\n    stompClient.subscribe( '/user/' + userData.username + '/private', onPrivateMessageReceived);\n  }\n\n\n    return (\n    <div className='container'>\n        {userData.connected?\n        <div>\n\n        </div>\n        :<div className='register'>\n            <input\n            id='user-name'\n            placeholder='Enter the user name'\n            value={userData.username}\n            onChange={handleUserName}/>\n            <button type='button' onClick={registerUser}>Connect</button>\n        </div>\n        }\n\n    </div>\n  )\n}\n\nexport default ChatRoom"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAASC,IAAI,QAAQ,SAAS;AAC9B,OAAOC,MAAM,MAAM,eAAe;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,IAAIC,WAAW,GAAC,IAAI;AACpB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC;IACnCU,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE,EAAE;IAChBC,SAAS,EAAE,KAAK;IAChBC,OAAO,EAAE;EACb,CAAC,CAAC;EAEJ,MAAMC,cAAc,GAAIC,KAAK,IAAK;IAC5BN,WAAW,CAAC;MAAC,GAAGD,QAAQ;MAAEE,QAAQ,EAAGK,KAAK,CAACC,MAAM,CAACC;IAAK,CAAC,CAAC;EAC7D,CAAC;EAEH,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIC,IAAI,GAAG,IAAIjB,MAAM,CAAC,0BAA0B,CAAC;IACjDG,WAAW,CAACJ,IAAI,CAACkB,IAAI,CAAC;IACtBd,WAAW,CAACe,OAAO,CAAC,CAAC,CAAC,EAAEC,WAAW,EAAEC,OAAO,CAAC;EAC/C,CAAC;EAED,MAAMD,WAAW,GAAGA,CAAA,KAAM;IACxBZ,WAAW,CAAC;MAAC,GAAGD,QAAQ;MAAC,WAAW,EAAE;IAAI,CAAC,CAAC;IAC5CH,WAAW,CAACkB,SAAS,CAAC,kBAAkB,EAAEC,uBAAuB,CAAC;IAClEnB,WAAW,CAACkB,SAAS,CAAE,QAAQ,GAAGf,QAAQ,CAACE,QAAQ,GAAG,UAAU,EAAEe,wBAAwB,CAAC;EAC7F,CAAC;EAGC,oBACArB,OAAA;IAAKsB,SAAS,EAAC,WAAW;IAAAC,QAAA,EACrBnB,QAAQ,CAACI,SAAS,gBACnBR,OAAA;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEK,CAAC,gBACL3B,OAAA;MAAKsB,SAAS,EAAC,UAAU;MAAAC,QAAA,gBACtBvB,OAAA;QACA4B,EAAE,EAAC,WAAW;QACdC,WAAW,EAAC,qBAAqB;QACjChB,KAAK,EAAET,QAAQ,CAACE,QAAS;QACzBwB,QAAQ,EAAEpB;MAAe;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC3B3B,OAAA;QAAQ+B,IAAI,EAAC,QAAQ;QAACC,OAAO,EAAElB,YAAa;QAAAS,QAAA,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGL,CAAC;AAEV,CAAC;AAAAxB,EAAA,CA3CKD,QAAQ;AAAA+B,EAAA,GAAR/B,QAAQ;AA6Cd,eAAeA,QAAQ;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}